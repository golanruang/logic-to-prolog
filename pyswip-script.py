from pyswip import *
prolog = Prolog()
green = Functor("green", 2)
kind = Functor("kind", 2)
blue = Functor("blue", 2)
furry = Functor("furry", 2)
round = Functor("round", 2)
big = Functor("big", 2)
cold = Functor("cold", 2)
prolog.assertz("green(charlie, true)")
prolog.assertz("kind(charlie, true)")
prolog.assertz("blue(erin, true)")
prolog.assertz("kind(erin, true)")
prolog.assertz("green(fiona, true)")
prolog.assertz("blue(gary, true)")
prolog.assertz("furry(gary, true)")
prolog.assertz("green(gary, true)")
prolog.assertz("kind(gary, true)")
prolog.assertz("round(gary, true)")
prolog.assertz("green(x, true) :- round(x, true), kind(x, true)")
prolog.assertz("blue(x, true) :- green(x, true), round(x, true)")
prolog.assertz("big(x, true) :- round(x, true)")
prolog.assertz("furry(x, true) :- kind(x, true)")
prolog.assertz("kind(x, true) :- blue(x, true)")
prolog.assertz("big(x, true) :- green(x, true)")
prolog.assertz("blue(erin, true) :- cold(erin, true), green(erin, true)")
prolog.assertz("kind(x, true) :- cold(x, true), blue(x, true)")
prolog.assertz("round(x, true) :- green(x, true), big(x, true)")
X = Variable()
q = Query(round("fiona", X))
if q.nextSolution():
	print(X.value)
